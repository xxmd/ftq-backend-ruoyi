<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.clash.mapper.ProxyRuleMapper">
    <resultMap type="ProxyRule" id="ItemResultMap">
        <id property="id" column="rule_id"/>
        <result property="type" column="rule_type"/>
        <result property="content" column="rule_content"/>
        <result property="policy" column="rule_policy"/>
        <result property="sort" column="rule_sort"/>

        <result property="status" column="rule_status"/>
        <result property="delFlag" column="rule_del_flag"/>
        <result property="remark" column="rule_remark"/>
        <result property="createBy" column="rule_create_by"/>
        <result property="createTime" column="rule_create_time"/>
        <result property="updateBy" column="rule_update_by"/>
        <result property="updateTime" column="rule_update_time"/>

        <association property="proxyNode" javaType="ProxyNode" resultMap="ProxyNodeResult"/>
        <association property="proxyGroup" javaType="ProxyGroup" resultMap="ProxyGroupResult"/>
    </resultMap>

    <resultMap id="ProxyNodeResult" type="ProxyNode">
        <id property="id" column="node_id"/>
        <result property="name" column="node_name"/>
        <!--        <result property="type" column="node_type"/>-->
        <!--        <result property="server" column="node_server"/>-->
        <!--        <result property="port" column="node_port"/>-->
        <!--        <result property="tls" column="node_tls"/>-->
        <!--        <result property="password" column="node_password"/>-->
        <!--        <result property="sni" column="sni"/>-->
        <!--        <result property="skipCertVerify" column="skip_cert_verify"/>-->
        <!--        <result property="udp" column="udp"/>-->
        <!--        <result property="cipher" column="cipher"/>-->
        <!--        <result property="status" column="status"/>-->
        <!--        <result property="delFlag" column="del_flag"/>-->
        <!--        <result property="createBy" column="create_by"/>-->
        <!--        <result property="createTime" column="create_time"/>-->
        <!--        <result property="updateBy" column="update_by"/>-->
        <!--        <result property="updateTime" column="update_time"/>-->
        <!--        <result property="remark" column="remark"/>-->
    </resultMap>

    <resultMap id="ProxyGroupResult" type="ProxyGroup">
        <id property="id" column="group_id"/>
        <result property="name" column="group_name"/>
        <result property="type" column="group_type"/>
        <result property="url" column="group_url"/>
        <result property="intervalSeconds" column="group_interval_seconds"/>

        <result property="status" column="group_status"/>
        <result property="remark" column="group_remark"/>
        <result property="delFlag" column="group_del_flag"/>
        <result property="createBy" column="group_create_by"/>
        <result property="createTime" column="group_create_time"/>
        <result property="updateBy" column="group_update_by"/>
        <result property="updateTime" column="group_update_time"/>
    </resultMap>

    <sql id="selectItemVo">
        select item.id as rule_id, item.type as rule_type, item.content as rule_content, item.policy as rule_policy, item.sort as rule_sort,
        item.status as rule_status, item.del_flag as rule_del_flag, item.remark as rule_remark,
        item.create_by as rule_create_by, item.create_time as rule_create_time, item.update_by as rule_update_by,
        item.update_time as rule_update_time,
        pn.id as node_id, pn.name as node_name,
        pg.id as group_id, pg.name as group_name, pg.type as group_type, pg.url as group_url, pg.interval_seconds as
        group_interval_seconds,
        pg.status as group_status, pg.del_flag as group_del_flag, pg.remark as group_remark
        from proxy_rule item
        left join proxy_group pg on item.group_id = pg.id and pg.del_flag = '0'
        left join proxy_node pn on item.node_id = pn.id and pn.del_flag = '0'
    </sql>

    <select id="fuzzyQuery" parameterType="ProxyRule" resultMap="ItemResultMap">
        <include refid="selectItemVo"/>
        where item.del_flag = '0'
        <if test="type != null">
            AND item.type = #{type}
        </if>
        <if test="content != null and content != ''">
            AND item.content like concat('%', #{content}, '%')
        </if>
        <if test="policy != null">
            AND item.policy = #{policy}
        </if>
        <if test="status != null and status != ''">
            AND item.status = #{status}
        </if>
        <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
            and date_format(item.create_time,'%Y%m%d') &gt;= date_format(#{params.beginTime},'%Y%m%d')
        </if>
        <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
            and date_format(item.create_time,'%Y%m%d') &lt;= date_format(#{params.endTime},'%Y%m%d')
        </if>
        order by sort, item.create_time desc
    </select>

    <select id="exactQuery" parameterType="ProxyRule" resultMap="ItemResultMap">
        <include refid="selectItemVo"/>
        where item.del_flag = '0'
        <if test="id != null and id != 0">
            AND item.id = #{id}
        </if>
        <if test="type != null">
            AND item.type = #{type}
        </if>
        <if test="content != null and content != ''">
            AND item.content = #{content}
        </if>
        <if test="status != null and status != ''">
            AND item.status = #{status}
        </if>
        order by item.create_time
    </select>

    <insert id="insert" parameterType="ProxyRule" useGeneratedKeys="true" keyProperty="id">
        insert into proxy_rule(
        <if test="id != null and id != 0">id,</if>
        <if test="type != null">type,</if>
        <if test="content != null and content != ''">content,</if>
        <if test="policy != null ">policy,</if>
        <if test="proxyNode != null">node_id,</if>
        <if test="proxyGroup != null">group_id,</if>
        <if test="sort != null ">sort,</if>
        <if test="status != null and status != ''">status,</if>
        <if test="remark != null and remark != ''">remark,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        create_time
        )values(
        <if test="id != null and id != 0">#{id},</if>
        <if test="type != null">#{type},</if>
        <if test="content != null and content != ''">#{content},</if>
        <if test="policy != null">#{policy},</if>
        <if test="proxyNode != null">#{proxyNode.id},</if>
        <if test="proxyGroup != null">#{proxyGroup.id},</if>
        <if test="sort != null ">#{sort},</if>
        <if test="status != null and status != ''">#{status},</if>
        <if test="remark != null and remark != ''">#{remark},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        sysdate()
        )
    </insert>

    <update id="update" parameterType="ProxyRule">
        update proxy_rule
        <set>
            <if test="type != null">type = #{type},</if>
            <if test="content != null and content != ''">content = #{content},</if>
            <if test="policy != null">policy = #{policy},</if>
            node_id = #{proxyNode.id},
            group_id = #{proxyGroup.id},
            <if test="sort != null">sort = #{sort},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = sysdate()
        </set>
        where id = #{id}
    </update>

    <delete id="delete" parameterType="Long">
        update proxy_rule set del_flag = '2' where id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>